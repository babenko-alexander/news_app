// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckBox should match to snapshot - Primary: Primary CheckBox snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CheckBox
    text="test text"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TouchableOpacity
        activeOpacity={0.7}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 50,
            "flexDirection": "row",
          }
        }
      >
        <View>
          <Image
            source={
              Object {
                "testUri": "../../../app/assets/unchecked.png",
              }
            }
            style={
              Object {
                "height": 20,
                "width": 20,
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "marginLeft": 5,
            }
          }
        >
          <Text>
            test text
          </Text>
        </View>
      </TouchableOpacity>,
      "style": Object {
        "marginBottom": 11,
        "marginRight": 8,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.7,
        "children": Array [
          <View>
            <Image
              source={
                Object {
                  "testUri": "../../../app/assets/unchecked.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
            />
          </View>,
          <View
            style={
              Object {
                "marginLeft": 5,
              }
            }
          >
            <Text>
              test text
            </Text>
          </View>,
        ],
        "onPress": undefined,
        "style": Object {
          "alignItems": "center",
          "borderRadius": 50,
          "flexDirection": "row",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Image
              source={
                Object {
                  "testUri": "../../../app/assets/unchecked.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": Object {
                "testUri": "../../../app/assets/unchecked.png",
              },
              "style": Object {
                "height": 20,
                "width": 20,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text>
              test text
            </Text>,
            "style": Object {
              "marginLeft": 5,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test text",
            },
            "ref": null,
            "rendered": "test text",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TouchableOpacity
          activeOpacity={0.7}
          style={
            Object {
              "alignItems": "center",
              "borderRadius": 50,
              "flexDirection": "row",
            }
          }
        >
          <View>
            <Image
              source={
                Object {
                  "testUri": "../../../app/assets/unchecked.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "marginLeft": 5,
              }
            }
          >
            <Text>
              test text
            </Text>
          </View>
        </TouchableOpacity>,
        "style": Object {
          "marginBottom": 11,
          "marginRight": 8,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.7,
          "children": Array [
            <View>
              <Image
                source={
                  Object {
                    "testUri": "../../../app/assets/unchecked.png",
                  }
                }
                style={
                  Object {
                    "height": 20,
                    "width": 20,
                  }
                }
              />
            </View>,
            <View
              style={
                Object {
                  "marginLeft": 5,
                }
              }
            >
              <Text>
                test text
              </Text>
            </View>,
          ],
          "onPress": undefined,
          "style": Object {
            "alignItems": "center",
            "borderRadius": 50,
            "flexDirection": "row",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Image
                source={
                  Object {
                    "testUri": "../../../app/assets/unchecked.png",
                  }
                }
                style={
                  Object {
                    "height": 20,
                    "width": 20,
                  }
                }
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": Object {
                  "testUri": "../../../app/assets/unchecked.png",
                },
                "style": Object {
                  "height": 20,
                  "width": 20,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Text>
                test text
              </Text>,
              "style": Object {
                "marginLeft": 5,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test text",
              },
              "ref": null,
              "rendered": "test text",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CheckBox should match to snapshot - Secondary: Secondary CheckBox snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CheckBox
    checked={true}
    text="test text"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TouchableOpacity
        activeOpacity={0.7}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 50,
            "flexDirection": "row",
          }
        }
      >
        <View>
          <Image
            source={
              Object {
                "testUri": "../../../app/assets/checked.png",
              }
            }
            style={
              Object {
                "height": 20,
                "width": 20,
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "marginLeft": 5,
            }
          }
        >
          <Text>
            test text
          </Text>
        </View>
      </TouchableOpacity>,
      "style": Object {
        "marginBottom": 11,
        "marginRight": 8,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.7,
        "children": Array [
          <View>
            <Image
              source={
                Object {
                  "testUri": "../../../app/assets/checked.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
            />
          </View>,
          <View
            style={
              Object {
                "marginLeft": 5,
              }
            }
          >
            <Text>
              test text
            </Text>
          </View>,
        ],
        "onPress": undefined,
        "style": Object {
          "alignItems": "center",
          "borderRadius": 50,
          "flexDirection": "row",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Image
              source={
                Object {
                  "testUri": "../../../app/assets/checked.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": Object {
                "testUri": "../../../app/assets/checked.png",
              },
              "style": Object {
                "height": 20,
                "width": 20,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text>
              test text
            </Text>,
            "style": Object {
              "marginLeft": 5,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test text",
            },
            "ref": null,
            "rendered": "test text",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TouchableOpacity
          activeOpacity={0.7}
          style={
            Object {
              "alignItems": "center",
              "borderRadius": 50,
              "flexDirection": "row",
            }
          }
        >
          <View>
            <Image
              source={
                Object {
                  "testUri": "../../../app/assets/checked.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "marginLeft": 5,
              }
            }
          >
            <Text>
              test text
            </Text>
          </View>
        </TouchableOpacity>,
        "style": Object {
          "marginBottom": 11,
          "marginRight": 8,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.7,
          "children": Array [
            <View>
              <Image
                source={
                  Object {
                    "testUri": "../../../app/assets/checked.png",
                  }
                }
                style={
                  Object {
                    "height": 20,
                    "width": 20,
                  }
                }
              />
            </View>,
            <View
              style={
                Object {
                  "marginLeft": 5,
                }
              }
            >
              <Text>
                test text
              </Text>
            </View>,
          ],
          "onPress": undefined,
          "style": Object {
            "alignItems": "center",
            "borderRadius": 50,
            "flexDirection": "row",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Image
                source={
                  Object {
                    "testUri": "../../../app/assets/checked.png",
                  }
                }
                style={
                  Object {
                    "height": 20,
                    "width": 20,
                  }
                }
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": Object {
                  "testUri": "../../../app/assets/checked.png",
                },
                "style": Object {
                  "height": 20,
                  "width": 20,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Text>
                test text
              </Text>,
              "style": Object {
                "marginLeft": 5,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test text",
              },
              "ref": null,
              "rendered": "test text",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
